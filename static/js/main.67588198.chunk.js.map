{"version":3,"sources":["logo.svg","component/EducationCard.js","component/Education.js","component/Bio.js","component/ProjectCard.js","component/Projects.js","component/ExperienceCard.js","component/Experience.js","container/MainContainer.js","component/Header.js","component/TableOfContents.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ExperienceCard","props","education","school","location","dates","degree","data","className","map","desc","educationHash","Education","edu","EducationCard","Bio","ProjectCard","project","projectName","githubLink","videoLink","description","collaboration","href","src","frameborder","allow","allowfullscreen","title","projects","name","link","Projects","pro","experience","company","role","Experience","experienceHash","exp","MainContainer","onClick","handlePage","page","renderContent","Header","id","TableOfContents","App","state","maxPages","handlePageArrow","plusMinus","setState","handlePageTOC","newPage","this","React","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.67588198.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nfunction ExperienceCard(props){\n    const {school, location, dates, degree, data} = props.education\n    return (\n        <div className='card'>\n            <div className='cardRow'>\n                <div className='cardTitle'>{school}</div>\n                <div>{dates}</div>\n            </div>\n            <div className='cardRow'>\n                <div>{location}</div>\n                <div>{degree}</div>\n            </div>\n            <ul className='cardList'>\n                {data.map(desc=>{\n                    return <li className='cardDescription'>{desc}</li>\n                })}\n            </ul>\n            \n        </div>\n    )\n}\n\nexport default ExperienceCard","import React from 'react'\nimport EducationCard from './EducationCard'\n\nconst educationHash = [\n    {\n        school: 'Flatiron School',\n        location: 'NYC, NY',\n        degree: 'Software Engineering Immersive Program',\n        dates: 'July 2019 - October 2019',\n        data: [\n            \n        ]\n    },\n    {\n        school: 'University of Notre Dame',\n        location: 'South Bend, IN',\n        degree: 'BS in Science-Business',\n        dates: 'August 2012 to May 2016',\n        data: [\n                \n            ] \n    }\n    ]\n\nlet renderEducation = () =>{\n    return educationHash.map((edu)=>{\n         return <EducationCard education={edu}/>\n     })\n }\n\nfunction Education(){\n    return(\n        <div className='cardContainer'>\n            {/* <h1>Experience</h1> */}\n            {renderEducation()}\n        </div>\n    )\n}\n\nexport default Education","import React from 'react'\n\nfunction Bio(){\n    return(\n        <div className='cardContainer'>\n            <div className = 'card'>\n                <div className ='experienceRow'>\n                    <div className='cardTitle'>About Me</div><br/>\n                    <div className='bioTable'>\n                    <tr className='bioRow'>\n                        <th className = 'bioLabel'>Hometown:</th>\n                        <div>\n                            Pleasantville, NY\n                        </div>\n                    </tr>\n                    <tr className='bioRow'>\n                        <th className = 'bioLabel'>High School:</th>\n                        <div>\n                            Pleasantville High School\n                        </div>\n                    </tr>\n                    <tr className='bioRow'>\n                        <th className = 'bioLabel'>Programming Languages:</th>\n                        <div>Javascript</div>\n                        <div>Ruby</div>\n                        <div>Python</div>\n                    </tr>\n                    <tr className='bioRow'>\n                        <th className = 'bioLabel'>Technical Skills:</th>\n                        <div>HTML</div>\n                        <div>CSS</div>\n                        <div>React</div>\n                        <div>Redux</div>\n                        <div>Rails</div>\n                        <div>Flask</div>\n                        <div>Socket.io</div>\n                        <div>SQL</div>\n                    </tr>\n                    <tr className='bioRow'>\n                        <th className = 'bioLabel'>Favorite Sports Teams:</th>\n                        <div>Yankees</div>\n                        <div>Jets</div>\n                        <div>Knicks</div>\n                        <div>Fighting Irish</div>\n                    </tr>\n                    <tr className='bioRow'>\n                        <th className = 'bioLabel'>Hobbies:</th>\n                        <div>Dungeons and Dragons</div>\n                        <div>Golf</div>\n                        <div>Tuba</div>\n                        <div>Video games</div>\n                    </tr>\n                    <tr className='bioRow'>\n                        <th className = 'bioLabel'>Fun Facts:</th>\n                        <div>Both of my parents were born in Portugal</div>\n                        <div>I have performed with the band Chicago</div>\n                    </tr>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Bio","import React from 'react'\n\nfunction ProjectCard(props){\n    const {projectName, githubLink, videoLink, description, collaboration,  data} = props.project\n    return (\n        <div className='card'>\n            <div className='cardRow'>\n                <div className='cardTitle'>{projectName}</div>\n            </div>\n            <div className='cardRow'>\n                <a href={githubLink}>Link to Code</a>\n            </div>\n            <div className='demoWrapper'>\n                <iframe \n                    className='demoVideo'\n                    src={videoLink}\n                    frameborder='0'\n                    allow='autoplay; encrypted-media'\n                    allowfullscreen\n                    title='video'\n                />\n            </div>\n            <ul className='cardList'>\n                {data.map(desc=>{\n                    return <li className='cardDescription'>{desc}</li>\n                })}\n            </ul>\n            \n        </div>\n    )\n}\n\nexport default ProjectCard","import React from 'react'\nimport ProjectCard from './ProjectCard.js'\n\nconst projects =[\n    {\n        projectName: 'Pub Quiz Online',\n        githubLink: 'https://github.com/asantos649/pub_quiz_online',\n        videoLink: 'https://www.youtube.com/embed/BeGRADJl0ek',\n        description: 'Multi-player, real-time trivia game ',\n        collaboration: {\n                            name:'',\n                            link:''\n                        },\n        data:[\n            'Learned Socket.io to enable bi-directional, real-time, event-based communication',\n            'Utilized Redux to manage state across multiple React Components',\n            'Designed application using media queries and custom CSS to enable a mobile user experience',\n        ]\n    }, \n    {\n        projectName: 'CReddit',\n        githubLink: 'https://github.com/TylerKnvpp/cReddit',\n        videoLink: 'https://www.youtube.com/embed/mKK0Bi0X3QE',\n        description: 'Mock Reddit application',\n        collaboration: {\n                            name:'',\n                            link:''\n                        },\n        data:[\n            'Created a full Rails API to save and fetch data',\n            'Serialized the backend with Active Model Serializer to format the API',\n            'Imported CSS library from Semantic-UI to stylize the user experience',\n            'Implemented React to create an interactive single-page application',\n        ]\n    }\n]\n\nlet renderProjects = () =>{\n    return projects.map((pro)=>{\n         return <ProjectCard project={pro}/>\n     })\n }\n\nfunction Projects(){\n    return(\n        <div className='cardContainer'>\n            {renderProjects()}\n            \n        </div>\n    )\n}\n\nexport default Projects","import React from 'react'\n\nfunction ExperienceCard(props){\n    const {company, location, dates, role, data} = props.experience\n    return (\n        <div className='card'>\n            <div className='cardRow'>\n                <div className='cardTitle'>{company}</div>\n                <div>{dates}</div>\n            </div>\n            <div className='cardRow'>\n                <div>{location}</div>\n                <div>{role}</div>\n            </div>\n            <ul className='cardList'>\n                {data.map(desc=>{\n                    return <li className='cardDescription'>{desc}</li>\n                })}\n            </ul>\n            \n        </div>\n    )\n}\n\nexport default ExperienceCard","import React from 'react'\nimport ExperienceCard from './ExperienceCard'\n\nfunction Experience(){\n\n    const experienceHash = [\n        {\n            company: 'Flatiron School',\n            location: 'NYC, NY',\n            role: 'Software Engineering Coach',\n            dates: 'November 2019 - Present',\n            data: [\n                'Explain beginner and intermediate coding principles to students who are new to the industry',\n                'Handle both technical and interpersonal issues of cohorts of up to 30 students',\n                'Approve and restructure domain models and React component hierarchies for various student projects ',\n                'Evaluate technical aptitude of students based on code challenges and personal projects',\n                'Run supplemental lectures and code reviews both remotely and in-person',\n                'Transitioned processes, procedures, and events to remote instruction during the COVID-19 pandemic'\n            ]\n        },\n        {\n            company: 'Epic Systems',\n            location: 'Madison, WI',\n            role: 'Software Tester',\n            dates: 'June 2016 to July 2019',\n            data: [\n                    'QA Role Lead for analytics and third-party integrations functional areas',\n                \t'Managed multiple concurrent development projects from initial design through release ',\n                \t'Identified functional bugs and usability improvements to increase software quality ',\n                \t'Pioneered a new Quality Assurance content creation project while providing feedback and suggesting improvements ',\n                \t'Triaged work for team and divided testing assignments among others so that all tasks were completed on time',\n                \t'Created, updated, and ran through test plans for multiple application features to ensure thorough testing ',\n                \t'Performed iterative design review for new functionality to catch potential bugs before initial development',\n                \t'Organized regular and ad-hoc team-wide testing efforts that discovered and fixed new bugs',\n                    'Participated in root cause analyses for released bugs and problematic projects that yielded new processes'\n                ] \n        }\n        ]\n\n    let renderExperiences = () =>{\n       return experienceHash.map((exp)=>{\n            return <ExperienceCard experience={exp}/>\n        })\n    }\n\n    return(\n        <div className='cardContainer'>\n            {/* <h1>Experience</h1> */}\n            {renderExperiences()}\n        </div>\n    )\n}\n\nexport default Experience","import React from 'react'\nimport Education from '../component/Education'\nimport Bio from '../component/Bio'\nimport Projects from '../component/Projects'\nimport Experience from '../component/Experience'\n\nfunction MainContainer(props){\n    \n    const renderContent = () => {\n        switch(props.page){\n            case 1:\n                return <Projects />\n            case 2:\n                return <Experience />\n            case 3:\n                return <Education />\n            case 4:\n                return <Bio />\n        }\n    }\n\n    return(\n        <div className='mainContainer'>\n            <div className='moveButton' onClick={()=>props.handlePage('-')}>\n                <span>{'<'}</span>\n                <span>{'<'}</span>\n                <span>{'<'}</span>\n            </div>\n            {renderContent()}\n            <div className='moveButton' onClick={()=>props.handlePage('+')}>\n                <span>{'>'}</span>\n                <span>{'>'}</span>\n                <span>{'>'}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default MainContainer","import React from 'react'\n\nfunction Header(){\n    return(\n        <div className='header'>\n            <img id='headerPic' src='andrew_picture.jpeg'/>\n            <div>\n                <div className='name'>Andrew J. Santos</div>\n                <div className='shortBio'>\n                    Full stack web developer with experience in Ruby on Rails, JavaScript, React, and Redux projects.  \n                    I spent three years as a software tester in the healthcare IT industry before deciding to become a developer.\n                    I want to use my creativity and problem-solving skills to work on new and exciting projects.  \n                    As an alumnus of the Notre Dame Marching Band, I now play at Tuba Christmas every year.\n                </div>\n                <div className='links'>\n                    <div>914-980-9500</div>\n                    <div>asantos@alumni.nd.edu</div>\n                    <a href='https://www.linkedin.com/in/andrew-j-santos/'>LinkedIn</a>\n                    <a href='https://github.com/asantos649'>Github</a>  \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\n\nfunction TableOfContents(props){\n\n    return(\n        <span className='tableOfContents'>\n           <span className='navLink' id={props.page === 1 && 'selectedPage'}onClick={()=>props.handlePage(1)}>Projects</span>\n           <span className='navLink' id={props.page === 2 && 'selectedPage'}onClick={()=>props.handlePage(2)}>Experience</span>\n           <span className='navLink' id={props.page === 3 && 'selectedPage'}onClick={()=>props.handlePage(3)}>Education</span>\n           <span className='navLink' id={props.page === 4 && 'selectedPage'}onClick={()=>props.handlePage(4)}>Bio</span>\n        </span>\n    )\n}\n\nexport default TableOfContents","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MainContainer from './container/MainContainer'\nimport Header from './component/Header'\nimport TableOfContents from './component/TableOfContents'\n\n\nclass App extends React.Component {\n\n  state={\n    page:1,\n    maxPages:4\n  }\n\n  handlePageArrow = (plusMinus) => {\n    if (plusMinus === '-'){\n      if(this.state.page === 1){\n        this.setState({page:this.state.maxPages})\n      } else{\n        this.setState({page:this.state.page - 1})\n      }\n    } else if (plusMinus === '+'){\n      if(this.state.page === this.state.maxPages){\n        this.setState({page:1})\n      } else{\n        this.setState({page:this.state.page + 1})\n      }\n    }\n  }\n\n  handlePageTOC = (newPage) => {\n    this.setState({page:newPage})\n  }\n\n  render(){\n    return (\n      <div className='content'>\n        <Header/>\n        <TableOfContents page={this.state.page} handlePage={this.handlePageTOC}/>\n        <MainContainer page={this.state.page} handlePage={this.handlePageArrow}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}